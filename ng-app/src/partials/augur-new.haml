.row.action-bar
  .columns.small-12
    %ul.left.action-bar-breadcrumb
      %li
        %a{ href: '#/' }
          %span.glyphicon.glyphicon-th
      %li
        %a{ href: '#/' }
          %span.glyphicon.glyphicon-picture
      %li
        %span.glyphicon.glyphicon-eye-open
        %span Set up New Augur

.row.container.new-augur-wizard
  .small-12.columns
    %form{ name: 'form', novalidate: '' }

      .row.step.step-1{ ng: { class: '(step==1) ? "active" : ""' } }
        .small-12.columns
          %a{ href: '', ng: { click: 'step=1' } }
            %h5.subheader.title
              Step 1 - Name and habitat
          .body{ ng: { show: 'step==1' } }
            %h6.subheader.subtitle
              Give your augur a unique name and select a habitat
            .row.augur-name
              .small-1.columns
                %label.right.inline{ for: 'augur-name' } Name
              .small-3.columns.end{ ng: { class: '{"error" : form.augurName.$error.uniqueAugurName}' } }
                %input#augur-name{ name: 'augurName', placeholder: 'Please enter a name', type: 'text', ng: { model: 'augur.name' }, 'unique-augur-name' => '' }
                %small.error{ ng: { show: 'form.augurName.$error.uniqueAugurName' } } This name already exists
            .row.augur-habitat
              .small-1.columns
                %label.right.inline{ for: 'augur-habitat' } Habitat
              .small-3.columns.end
                %input#augur-habitat{ name: 'augurHabitat', placeholder: 'Type to search', type: 'text', ng: { model: 'augur.habitat' }, typeahead: 'habitat as habitat.name for habitat in habitats' }
          .next-button
            .next-button-wrap
              %a.tiny.button.radius{ href: '', ng: { disabled: '!stepValid.one', click: 'stepValid.one && (step=2)' } } Next step >

      .row.step.step-2{ ng: { class: '(step==2) ? "active" : ""' } }
        .small-12.columns
          %a{ ng: { click: 'stepValid.one && (step=2)' } }
            %h5.subheader.title
              Step 2 - Select a fact table
          .body{ ng: { show: 'step==2' } }
            %h6.subheader.subtitle Select the facts table that contains the prediction target

            .row
              .small-12.columns
                %ul.small-block-grid-2.medium-block-grid-3.large-block-grid-4.fact-tables
                  %li{'ng-repeat' => 'factTable in factTables'}
                    %label{ for: '{{ factTable.id }}' }
                      %input{ id: '{{ factTable.id }}', type: 'radio', ng: { model: 'augur.factTable', value: 'factTable' } }
                      .th{ ng: { class: '(augur.factTable==factTable) ? "selected" : ""' } }
                        %img{ src: '/img/tile_half_bg.gif' }
                        .fact-body
                          %i.fi-checkbox{ ng: { show: 'augur.factTable==factTable' } }
                          %h8.subheader
                            {{factTable.name}}
                          %p
                            {{factTable.description}}
          .next-button
            .next-button-wrap
              %a.tiny.button.radius{ href: '', ng: { disabled: '!stepValid.two', click: 'stepValid.two && (step=3)' } } Next step >

      .row.step.step-3{ ng: { class: '(step==3) ? "active" : ""' } }
        .small-12.columns
          %a{ href: '', ng: { click: 'stepValid.two && (step=3)' } }
            %h5.subheader.title
              Step 3 - Define prediction target
          .body{ ng: { show: 'step==3' } }
            %h6.subheader.subtitle
              Enter a comma separated list of IDs to define the prediction target
              .row.prediction-targets
                .small-9.columns.input
                  %textarea{ name: 'predictionTargetIds', placeholder: 'Enter a comma separated list of IDs to define the prediction target', ng: { model: 'augur.predictionTargetIds' }, 'available-prediction-target' => '' }
                .small-3.columns
                  .validation
                    %h5.subheader Validation
                    .validation-message-show-hide.not-validated{ ng: { show: '!predictionTargetIdsValidated' }}
                      %h6 You need to validate your prediction target before continuing
                    .validation-message-show-hide.validated{ ng: { show: 'predictionTargetIdsValidated' }}
                      .valid.validation-elements{ ng: { show: 'stepValid.three' }}
                        Your prediction target ids have been verified.
                        .verified.validation-icon
                          %span.glyphicon.glyphicon-ok-circle
                      .invalid.validation-elements{ ng: { show: '!stepValid.three' }}
                        .error{ ng: { show: 'form.predictionTargetIds.$error.recognized' } }
                          The following prediction target ids do not exist in the fact table:
                          {{ unrecognizedPredictionTargetIds.join(', ') }}
                        .error{ ng: { show: 'form.predictionTargetIds.$error.present' } }
                          You need to provide one or more prediction target ids
                        .error.validation-icon
                          %span.glyphicon.glyphicon-remove-circle
                    .validation-elements
                      %button.button.small.radius{ ng: { click: 'validatePredictionTargetIds()', show: '!stepValid.three' } }
                        Validate

          .next-button
            .next-button-wrap
              %a.tiny.button.radius{ href: '', ng: { disabled: '!stepValid.three', click: 'stepValid.three && (step=4)' } } Next step >

      .row.step.step-4.step-last{ ng: { class: '(step==4) ? "active" : ""' } }
        .small-12.columns
          %a{ href: '', ng: { click: 'stepValid.three && (step=4)' } }
            %h5.subheader.title
              Step 4 - Schedule and trigger settings
          .body{ ng: { show: 'step==4' } }
            %h6.subheader.subtitle
              Set prediction and evaluation schedule, set a key performance indicator and set the automatic learning threshold
            .row.schedules
              .small-4.columns
                .prediction
                  .title
                    %h6 Prediction Schedule
                  .content
                    %p.description
                      Your bones don't break, mine do. That's clear. Your cells react to bacteria and viruses
                      differently than mine. You don't get sick, I do. That's also clear. But for some reason,
                      you and I react the exact same way to water.
                    .row
                      .small-12.columns
                        %label Select schedule type:
                    .row
                      .small-4.columns
                        %select{ name: 'prediction-schedule-type', ng: { model: 'augur.prediction.schedule.type' } }
                          %option{ value: 'daily' } daily
                          %option{ value: 'weekly' } weekly
                          %option{ value: 'monthly' } monthly
                      .small-8.columns
                        .row.daily{ ng: { if: 'augur.prediction.schedule.type == "daily"' } }
                          .small-6.columns.end
                            %input{ type: 'text', id: 'prediction-schedule-daily-time', ng: { model: 'augur.prediction.schedule.daily.time' } }
                        .row.weekly{ ng: { if: 'augur.prediction.schedule.type == "weekly"' } }
                          .small-6.columns
                            %select{ name: 'prediction-schedule-weekly-day', ng: { model: 'augur.prediction.schedule.weekly.day' } }
                              %option{ value: 'monday' }    Mon
                              %option{ value: 'tuesday' }   Tue
                              %option{ value: 'wednesday' } Wed
                              %option{ value: 'thursday' }  Thu
                              %option{ value: 'friday' }    Fri
                              %option{ value: 'saturday' }  Sat
                              %option{ value: 'sunday' }    Sun
                          .small-6.columns
                            %input{ type: 'text', id: 'prediction-schedule-weekly-time', ng: { model: 'augur.prediction.schedule.weekly.time' } }
                        .row.monthly{ ng: { if: 'augur.prediction.schedule.type == "monthly"' } }
                          .small-6.columns
                            %select{ name: 'prediction-schedule-monthly-day', ng: { model: 'augur.prediction.schedule.monthly.day', options: 'day.key as day.label for day in DAYS_IN_MONTH' } }
                          .small-6.columns
                            %input{ type: 'text', id: 'prediction-schedule-monthly-time', ng: { model: 'augur.prediction.schedule.monthly.time' } }

              .small-4.columns
                .evaluation
                  .title
                    %h6 Evaluation Schedule
                  .content
                    %p.description
                      We swallow it too fast, we choke. We get some in
                      our lungs, we drown. However unreal it may seem, we are connected,
                      you and I. We're on the same curve, just on opposite ends.
                    .row
                      .small-12.columns
                        %label Select schedule type:
                    .row
                      .small-4.columns
                        %select{ name: 'evaluation-schedule-type', ng: { model: 'augur.evaluation.schedule.type' } }
                          %option{ value: 'daily' } daily
                          %option{ value: 'weekly' } weekly
                          %option{ value: 'monthly' } monthly
                      .small-8.columns
                        .row.daily{ ng: { if: 'augur.evaluation.schedule.type == "daily"' } }
                          .small-6.columns.end
                            %input{ type: 'text', id: 'evaluation-schedule-daily-time', ng: { model: 'augur.evaluation.schedule.daily.time' } }
                        .row.weekly{ ng: { if: 'augur.evaluation.schedule.type == "weekly"' } }
                          .small-6.columns
                            %select{ name: 'evaluation-schedule-weekly-day', ng: { model: 'augur.evaluation.schedule.weekly.day' } }
                              %option{ value: 'monday' }    Mon
                              %option{ value: 'tuesday' }   Tue
                              %option{ value: 'wednesday' } Wed
                              %option{ value: 'thursday' }  Thu
                              %option{ value: 'friday' }    Fri
                              %option{ value: 'saturday' }  Sat
                              %option{ value: 'sunday' }    Sun
                          .small-6.columns
                            %input{ type: 'text', id: 'evaluation-schedule-weekly-time', ng: { model: 'augur.evaluation.schedule.weekly.time' } }
                        .row.monthly{ ng: { if: 'augur.evaluation.schedule.type == "monthly"' } }
                          .small-6.columns
                            %select{ name: 'evaluation-schedule-monthly-day', ng: { model: 'augur.evaluation.schedule.monthly.day', options: 'day.key as day.label for day in DAYS_IN_MONTH' } }
                          .small-6.columns
                            %input{ type: 'text', id: 'evaluation-schedule-monthly-time', ng: { model: 'augur.evaluation.schedule.monthly.time' } }

              .small-4.columns
                .learning
                  .title
                    %h6 Automatic Learning
                  .content
                    %p.description
                      We swallow it too fast, we choke. We get some in
                      our lungs, we drown. However unreal it may seem, we are connected,
                      you and I. We're on the same curve, just on opposite ends.
                    .row
                      .small-12.columns
                        %label Define KPI and threshold
                    .row
                      .small-6.columns
                        %select{ name: 'learning-kpi', ng: { model: 'augur.learning.kpi', options: 'day as day.label for day in KEY_PERFORMANCE_INDICATORS' } }
                      .small-6.columns{ ng: { show: 'augur.learning.kpi.key' }}
                        .row
                          .small-6.columns#comparator
                            %label.inline{ for: 'learning-threshold' }
                              %span{ ng: { if: 'augur.learning.kpi.comparator == "lt"'} } less than
                              %span{ ng: { if: 'augur.learning.kpi.comparator == "gt"'} } greater than
                          .small-6.columns
                            %input{ name: 'learningThreshold', type: 'text', id: 'learning-threshold', ng: { model: 'augur.learning.kpi.threshold' }, 'threshold-in-range' => '', min: '{{augur.learning.kpi.min}}', max: '{{augur.learning.kpi.max}}' }
                    .row
                      .small-12.columns{ ng: { class: '{"error" : form.learningThreshold.$error.thresholdInRange}' } }
                        %small.error{ ng: { show: 'form.learningThreshold.$error.thresholdInRange' } } Value not in range. Min: {{augur.learning.kpi.min}}, Max: {{augur.learning.kpi.max}}
          .next-button
            .next-button-wrap
              %a.tiny.button.radius{ href: '#', ng: { disabled: '!stepValid.four' } } Activate Augur >
